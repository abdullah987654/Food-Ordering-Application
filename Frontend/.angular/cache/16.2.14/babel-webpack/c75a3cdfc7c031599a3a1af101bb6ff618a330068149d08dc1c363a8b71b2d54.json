{"ast":null,"code":"import { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let UserServiceService = /*#__PURE__*/(() => {\n  class UserServiceService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = \"http://localhost:8094\";\n    }\n    /*\n    This service methos is used to send request to the given url and perform user login operation based on the credentials entered by the user\n    */\n    userLogin(user) {\n      return this.http.post(this.baseUrl + \"/authenticate\", user, {\n        responseType: 'text'\n      }).pipe(catchError(this.handleError));\n    }\n    /*\n    This service method is used to send request to the given url and perform the sign uo operation based on the form data entered by the customer\n    */\n    signUp(sign_up) {\n      return this.http.post(this.baseUrl + \"/signup\", sign_up, {\n        responseType: \"text\"\n      }).pipe(catchError(this.handleError));\n    }\n    /*\n    This service method is used to send request to the given url and do user verification for forgot password page by using the information entered by the user\n    */\n    forgotPassword(forgotPassword) {\n      return this.http.post(this.baseUrl + \"/forgotPassword\", forgotPassword, {\n        responseType: \"text\"\n      }).pipe(catchError(this.handleError));\n    }\n    /*\n    This service method is used to send request to the given url and reset the password with the data entered by the user\n    */\n    resetPassword(changePassword) {\n      return this.http.post(this.baseUrl + \"/changePassword\", changePassword, {\n        responseType: \"text\"\n      }).pipe(catchError(this.handleError));\n    }\n    /*\n    This  method is used to handle the exceptions that might be received\n    */\n    // private handleError(errorResponse: HttpErrorResponse) {\n    //   return throwError(errorResponse);\n    // }\n    getOrderList(getOrderList) {\n      return this.http.post(this.baseUrl + \"/getOrderList\", getOrderList, {\n        responseType: \"text\"\n      }).pipe(catchError(this.handleError));\n    }\n    getActiveOrderList(getActiveOrderList) {\n      return this.http.post(this.baseUrl + \"/getActiveOrderList\", getActiveOrderList, {\n        responseType: \"text\"\n      }).pipe(catchError(this.handleError));\n    }\n    static #_ = this.ɵfac = function UserServiceService_Factory(t) {\n      return new (t || UserServiceService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UserServiceService,\n      factory: UserServiceService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return UserServiceService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}